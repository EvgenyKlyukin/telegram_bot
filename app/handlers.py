from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import ContentType
from aiogram.filters import Command

from app.database import add_user, user_exists

router = Router()


@router.message(Command("start"))
async def start_handler(message: Message):
    keyboard = [
            [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º",
                            request_contact=True)]
        ]
    await message.answer(('–ó–¥–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º" '
                          '–≤–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.'),
                          reply_markup=ReplyKeyboardMarkup(keyboard=keyboard))


@router.message(F.content_type == ContentType.CONTACT)
async def handle_contact(message):
    phone_number = message.contact.phone_number
    has_contact = user_exists(message.from_user.id)
    if not has_contact:
        add_user(message.from_user.id, phone_number)
        await message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!")
    else:
        await message.answer('–í–∞—à –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')


@router.message()
async def message_handler(message: Message):
    has_contact = user_exists(message.from_user.id)
    if not has_contact:
        await message.answer('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º" '
                             '–≤–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å')
    else:
        await message.answer('–í–∞—à –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! '
                             '–ú—ã —Å–æ–æ–±—â–∏–º –í–∞–º –æ –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º.')
